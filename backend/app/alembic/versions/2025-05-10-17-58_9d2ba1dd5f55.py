"""empty message

Revision ID: 9d2ba1dd5f55
Revises: 13d2068684ab
Create Date: 2025-05-10 17:58:19.975219

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9d2ba1dd5f55'
down_revision = '13d2068684ab'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") # todo why would we want trigrams by default?
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_Hero_age', table_name='Hero')
    op.drop_index('ix_Hero_id', table_name='Hero')
    op.drop_index('ix_Hero_name', table_name='Hero')
    op.drop_table('Hero')

    op.drop_index('ix_Team_id', table_name='Team')
    op.drop_index('ix_Team_name', table_name='Team')
    op.drop_table('Team')
    op.drop_index('ix_LinkGroupUser_id', table_name='LinkGroupUser')
    op.drop_table('LinkGroupUser')
    op.drop_index('ix_UserFollow_id', table_name='UserFollow')
    op.drop_table('UserFollow')
    op.drop_index('ix_Group_id', table_name='Group')
    op.drop_table('Group')

    op.drop_column('User', 'follower_count')
    op.drop_column('User', 'following_count')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('User', sa.Column('following_count', sa.BIGINT(), server_default=sa.text("'0'::bigint"), autoincrement=False, nullable=True))
    op.add_column('User', sa.Column('follower_count', sa.BIGINT(), server_default=sa.text("'0'::bigint"), autoincrement=False, nullable=True))
    op.create_table('Hero',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('secret_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('team_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['User.id'], name='Hero_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['team_id'], ['Team.id'], name='Hero_team_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Hero_pkey')
    )
    op.create_index('ix_Hero_name', 'Hero', ['name'], unique=False)
    op.create_index('ix_Hero_id', 'Hero', ['id'], unique=False)
    op.create_index('ix_Hero_age', 'Hero', ['age'], unique=False)
    op.create_table('Group',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['User.id'], name='Group_created_by_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Group_id', 'Group', ['id'], unique=False)
    op.create_table('UserFollow',
    sa.Column('is_mutual', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('target_user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='UserFollow_pkey')
    )
    op.create_index('ix_UserFollow_id', 'UserFollow', ['id'], unique=False)
    op.create_table('LinkGroupUser',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['Group.id'], name='LinkGroupUser_group_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='LinkGroupUser_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'group_id', 'user_id', name='LinkGroupUser_pkey')
    )
    op.create_index('ix_LinkGroupUser_id', 'LinkGroupUser', ['id'], unique=False)
    op.create_table('Team',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('headquarters', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['User.id'], name='Team_created_by_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Team_pkey')
    )
    op.create_index('ix_Team_name', 'Team', ['name'], unique=False)
    op.create_index('ix_Team_id', 'Team', ['id'], unique=False)
    # ### end Alembic commands ###
