[tool.poetry]
name = "app"
version = "0.2.0"
description = ""
authors = ["jonra1993 <jon_ra@hotmail.es>", "cazlo <cazlo@users.noreply.github.com>"]

[tool.black]
line-length = 88
target-version = [ "py310", "py311", "py312" ]
exclude = "((.eggs | .git | .pytest_cache | build | dist))"

[tool.ruff]
line-length = 88
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "B904",
    "B006",    
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["alembic", "__pycache__"]


[tool.poetry.dependencies]
python = ">3.10,<3.14"
alembic = "^1.13.0"
asyncpg = "^0.30.0"
fastapi = {extras = ["all"], version = "^0.115.12"}
sqlmodel = "0.0.24" # intentionally not doing ^ until non-0 minor version released
cryptography = "^45.0.0"
bcrypt = "^4.1.1"
SQLAlchemy-Utils = "^0.41.1"
SQLAlchemy = "^2.0.23"
fastapi-pagination = {extras = ["sqlalchemy"], version = "^0.12.21"}
fastapi-cache2 = "^0.2.1"
minio = "^7.2.0"
Pillow = "^11.0.0"
watchfiles = "^1.0.5"
asyncer = "0.0.5"
pandas = "^2.1.4"
openpyxl = "^3.1.2"
redis = "^6.0.0"
fastapi-async-sqlalchemy = "^0.6.0"
celery = "^5.3.6"
psycopg2-binary = "^2.9.5"
requests = "^2.31.0"
wheel = "^0.42.0"
setuptools = "^80.4.0"
fastapi-limiter = "^0.1.5"
pyjwt = {extras = ["crypto"], version = "^2.8.0"}
gunicorn = "^23.0.0"
uuid6 = "v2024.7.10"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
ruff = "^0.0.256"
pytest = "^8.0.0"
pytest-asyncio = "^0.21.1"
mypy = "^1.5.0"
pytest-cov = "^6.1.1"
gevent = "^25.4.2"
celery = {version = "^5.3.6", extras = ["pytest"]}
asgi-lifespan = "^2.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
# https://stackoverflow.com/questions/68826941/python-coverage-for-async-methods
concurrency = ["thread","gevent"]
omit = [
    "test/*",
]

[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    '@(abc\.)?abstractmethod',
    "def __repr__"
]
