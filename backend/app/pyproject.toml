[project]
name = "app"
version = "0.2.0"
description = ""
requires-python = ">3.10,<3.14"
authors = [
  { name = "jonra1993", email = "jon_ra@hotmail.es" },
  { name = "cazlo", email = "cazlo@users.noreply.github.com" }
]
dependencies = [
    "alembic>=1.13.0,<2.0.0",
    "asyncpg>=0.30.0,<0.31.0",
    "fastapi[all]>=0.116.0,<0.117.0",
    "sqlmodel==0.0.24",  # intentionally not doing ^ until non-0 minor version released
    "cryptography>=46.0.1,<46.1.0",
    "bcrypt>=4.1.1,<5.0.0",
    "SQLAlchemy-Utils>=0.42.0,<0.43.0",
    "SQLAlchemy>=2.0.23,<3.0.0",
    "fastapi-pagination[sqlalchemy]>=0.14.1,<0.15.0",
    "fastapi-cache2>=0.2.1,<0.3.0",
    "minio>=7.2.0,<8.0.0",
    "Pillow>=11.0.0,<12.0.0",
    "watchfiles>=1.0.5,<2.0.0",
    "asyncer==0.0.8",
    "pandas>=2.1.4,<3.0.0",
    "openpyxl>=3.1.2,<4.0.0",
    "redis>=6.0.0,<7.0.0",
    "fastapi-async-sqlalchemy>=0.6.0,<0.7.0",
    "celery>=5.3.6,<6.0.0",
    "psycopg2-binary>=2.9.5,<3.0.0",
    "requests>=2.31.0,<3.0.0",
    "wheel>=0.45.0,<0.46.0",
    "setuptools>=80.4.0,<81.0.0",
    "fastapi-limiter>=0.1.5,<0.2.0",
    "pyjwt[crypto]>=2.8.0,<3.0.0",
    "gunicorn>=23.0.0,<24.0.0",
    "uuid6==2025.0.1",
]

[dependency-groups]
dev = [
    "black>=25.1.0,<26.0.0",
    "ruff>=0.12.0,<0.13.0",
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=1.0.0,<2.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pytest-cov>=6.1.1,<7.0.0",
    "gevent>=25.4.2,<26.0.0",
    "celery[pytest]>=5.3.6,<6.0.0",
    "asgi-lifespan>=2.1.0,<3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = [ "py310", "py311", "py312" ]
exclude = "((.eggs | .git | .pytest_cache | build | dist))"

[tool.ruff]
line-length = 88
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "B904",
    "B006",    
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["alembic", "__pycache__"]

[tool.coverage.run]
# https://stackoverflow.com/questions/68826941/python-coverage-for-async-methods
concurrency = ["thread","gevent"]
omit = [
    "test/*",
]

[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    '@(abc\.)?abstractmethod',
    "def __repr__"
]

